trigger:
- main

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  artifactName: 'drop'

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build
  jobs:
  - job: Build_Job
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Instalar NuGet'

    - task: NuGetCommand@2
      displayName: 'Restaurar pacotes NuGet'
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: 'Compilar solução'
      inputs:
        solution: '$(solution)'
        msbuildArgs: >
          /p:DeployOnBuild=true
          /p:WebPublishMethod=Package
          /p:PackageAsSingleFile=true
          /p:SkipInvalidConfigurations=true
          /p:PackageLocation="$(Build.ArtifactStagingDirectory)\\" 
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      displayName: 'Executar testes'
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PowerShell@2
      displayName: 'Listar arquivos na pasta de artefatos'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Listando arquivos em $(Build.ArtifactStagingDirectory)..."
          Get-ChildItem -Recurse -Path "$(Build.ArtifactStagingDirectory)"

    - task: PublishPipelineArtifact@1
      displayName: 'Publicar artefato'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: '$(artifactName)'
        publishLocation: 'pipeline'

# Stage Dev - deploy no slot dev
- stage: Dev
  dependsOn: Build
  jobs:
  - deployment: Deploy_Dev
    displayName: 'Deploy em Dev'
    environment: 'dev-env'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Baixar artefato'
            inputs:
              artifact: '$(artifactName)'
              path: '$(Pipeline.Workspace)'

          - task: AzureWebApp@1
            displayName: 'Deploy no slot dev'
            inputs:
              azureSubscription: 'Azure subscription 1 (8ce70574-0262-4d67-b89b-086c67605511)'
              appType: 'webApp'
              appName: 'PaperlessApi'
              package: '$(Pipeline.Workspace)/drop/PaperlessAPI.api.zip'
              deployToSlotOrASE: true
              resourceGroupName: 'rg-paperless.api-dev'
              slotName: 'dev'

# Stage PRD - faz o swap do slot dev para produção
- stage: PRD
  dependsOn: Dev
  jobs:
  - deployment: SwapToProd
    displayName: 'Promover para Produção (Swap Slot)'
    environment: 'prd-env'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Fazer Swap do slot dev para produção'
            inputs:
              azureSubscription: 'Azure subscription 1 (8ce70574-0262-4d67-b89b-086c67605511)'
              WebAppName: 'PaperlessApi'
              ResourceGroupName: 'rg-paperless.api-dev'
              SourceSlot: 'dev'
              SwapWithProduction: true
